{"version":3,"sources":["utils/constants.ts","apis/get.ts","apis/put.ts","context/ticketBooking/context.tsx","context/ticketBooking/reducer.ts","context/ticketBooking/state.tsx","components/main-content/book-tickets.tsx","components/main-content/coachRow.tsx","components/main-content/coachSection.tsx","components/main-content/MainContent.tsx","components/navbar.tsx","pages/homepage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","Get","url","a","fetch","method","headers","then","res","json","catch","e","console","log","Put","data","mode","body","JSON","stringify","CoachContext","createContext","Reducer","state","action","type","total_seats_available","payload","booked_seats","coach_id","newly_booked_seats","CoachState","props","initialSeats","i","push","InitialStates","useReducer","dispatch","handleBookTickets","seats","required_seats","response","success","coach","String","_id","alert","handleRefreshTickets","handleGetTickets","Provider","value","children","BookTickets","useContext","inputRef","useRef","handleSubmit","event","preventDefault","current","className","onSubmit","ref","defaultValue","max","min","CoachRow","num","row","map","item","index","indexOf","CoachSection","MainContent","Navbar","brand","onClick","Homepage","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46a91ad1.chunk.js","sourcesContent":["// all constant api endpoints and other constant things go here\r\nexport const domain = 'http://localhost:3001';\r\n\r\nexport const baseUrl = `${domain}/api/v1/`;\r\n\r\nconst Title = 'Ticket Booking';\r\nexport default Title;\r\n","import { baseUrl } from '../utils/constants';\r\n\r\nconst Get = async (url: string) =>\r\n\tawait fetch(`${baseUrl}${url}`, {\r\n\t\tmethod: 'GET',\r\n\t\t// mode: 'cors',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t})\r\n\t\t.then((res: any) => res.json())\r\n\t\t.catch((e) => console.log(e));\r\n\r\nexport default Get;\r\n","import { baseUrl } from '../utils/constants';\r\n\r\nconst Put = async (url: string, data: any) =>\r\n\tawait fetch(`${baseUrl}${url}`, {\r\n\t\tmethod: 'PUT',\r\n\t\tmode: 'cors',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(data),\r\n\t})\r\n\t\t.then((res) => res.json())\r\n\t\t.catch((e) => console.log(e));\r\n\r\nexport default Put;\r\n","import { createContext } from 'react';\r\n\r\nconst CoachContext = createContext<any>({});\r\n\r\nexport default CoachContext;\r\n","const Reducer = (state: any, action: { type: any; payload: any }) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_BOOKINGS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotal_seats_available: action.payload.total_seats_available,\r\n\t\t\t\tbooked_seats: action.payload.booked_seats,\r\n\t\t\t\tcoach_id: action.payload.coach_id,\r\n\t\t\t};\r\n\t\tcase 'SET_NEW_BOOKINGS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewly_booked_seats: action.payload.newly_booked_seats,\r\n\t\t\t};\r\n\t}\r\n};\r\n\r\nexport default Reducer;\r\n","import React, { useReducer } from 'react';\r\nimport { ReactNode } from 'react';\r\nimport Get from '../../apis/get';\r\nimport Put from '../../apis/put';\r\nimport CoachContext from './context';\r\nimport Reducer from './reducer';\r\n\r\ninterface Props {\r\n\tchildren: ReactNode;\r\n}\r\n\r\nconst CoachState = (props: Props) => {\r\n\tlet initialSeats: never[][] = [];\r\n\tfor (let i = 0; i < 12; i++) {\r\n\t\tinitialSeats.push([]);\r\n\t}\r\n\t// initial states of the Toast\r\n\tconst InitialStates = {\r\n\t\tcoach_id: '',\r\n\t\ttotal_seats_available: 80,\r\n\t\tbooked_seats: initialSeats,\r\n\t\tnewly_booked_seats: initialSeats,\r\n\t};\r\n\r\n\t// initializing reducer.\r\n\t// All the changes in the state related to Toasts will happen in reducer\r\n\tconst [state, dispatch] = useReducer(Reducer, InitialStates);\r\n\r\n\t// book tickets for the selected no of seats\r\n\tconst handleBookTickets = async (seats: number) => {\r\n\t\tconst body = {\r\n\t\t\trequired_seats: seats,\r\n\t\t};\r\n\r\n\t\tconst response = await Put(`book_seats/${state.coach_id}`, body);\r\n\t\tconsole.log(response);\r\n\r\n\t\tif (response?.success === true) {\r\n\t\t\tlet total_seats_available = response.data.coach.total_seats_available;\r\n\t\t\tlet booked_seats = response.data.coach.booked_seats;\r\n\t\t\tlet coach_id = String(response.data.coach._id);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_BOOKINGS',\r\n\t\t\t\tpayload: { total_seats_available, booked_seats, coach_id },\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_NEW_BOOKINGS',\r\n\t\t\t\tpayload: { newly_booked_seats: response.data.newly_booked_seats },\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\talert('Something went wrong');\r\n\t};\r\n\r\n\t// book tickets for the selected no of seats\r\n\tconst handleRefreshTickets = async () => {\r\n\t\tconst body = {\r\n\t\t\ttotal_seats_available: 80,\r\n\t\t\tbooked_seats: initialSeats,\r\n\t\t};\r\n\r\n\t\tconst response = await Put(`refresh_bookings/${state.coach_id}`, body);\r\n\r\n\t\tif (response?.success === true) {\r\n\t\t\tlet total_seats_available = response.data.total_seats_available;\r\n\t\t\tlet booked_seats = response.data.booked_seats;\r\n\t\t\tlet coach_id = String(response.data._id);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_BOOKINGS',\r\n\t\t\t\tpayload: { total_seats_available, booked_seats, coach_id },\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_NEW_BOOKINGS',\r\n\t\t\t\tpayload: { newly_booked_seats: initialSeats },\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\talert('Something went wrong');\r\n\t};\r\n\r\n\t// book tickets for the selected no of seats\r\n\tconst handleGetTickets = async () => {\r\n\t\tconst response = await Get('check_availability');\r\n\r\n\t\tif (response?.success === true) {\r\n\t\t\tlet total_seats_available = response.data.total_seats_available;\r\n\t\t\tlet booked_seats = response.data.booked_seats;\r\n\t\t\tlet coach_id = String(response.data._id);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_BOOKINGS',\r\n\t\t\t\tpayload: { total_seats_available, booked_seats, coach_id },\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\talert('Something went wrong');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CoachContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttotal_seats_available: state.total_seats_available,\r\n\t\t\t\tbooked_seats: state.booked_seats,\r\n\t\t\t\tnewly_booked_seats: state.newly_booked_seats,\r\n\t\t\t\thandleBookTickets,\r\n\t\t\t\thandleGetTickets,\r\n\t\t\t\thandleRefreshTickets,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</CoachContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default CoachState;\r\n","import React, { useContext, useRef } from 'react';\r\nimport CoachContext from '../../context/ticketBooking/context';\r\n\r\ninterface Props {}\r\n\r\nconst BookTickets = (props: Props) => {\r\n\tconst { handleBookTickets, total_seats_available, coach_id } =\r\n\t\tuseContext(CoachContext);\r\n\tconst inputRef: React.Ref<any> = useRef(null);\r\n\r\n\tconst handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (inputRef.current.value > total_seats_available) {\r\n\t\t\talert('Please enter a valid number');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(inputRef?.current?.value);\r\n\r\n\t\tawait handleBookTickets(inputRef?.current?.value);\r\n\t\t// inputRef.current.value = ;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"book-tickets\">\r\n\t\t\t<h5>{total_seats_available} seats are available</h5>\r\n\t\t\t<form onSubmit={handleSubmit} className=\"main-form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tdefaultValue={1}\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmax={80}\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tclassName=\"seats-input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">Book</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BookTickets;\r\n","import React, { useContext } from 'react';\r\nimport CoachContext from '../../context/ticketBooking/context';\r\n\r\ninterface Props {\r\n\tnum: number;\r\n\trow: Array<number>;\r\n}\r\n\r\nconst CoachRow = ({ num, row }: Props) => {\r\n\tconst { booked_seats, newly_booked_seats } = useContext(CoachContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"row-section\">\r\n\t\t\t{num !== 11\r\n\t\t\t\t? [1, 2, 3, 4, 5, 6, 7].map((item, index) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`seat ${\r\n\t\t\t\t\t\t\t\tnewly_booked_seats[num].indexOf(item) > -1\r\n\t\t\t\t\t\t\t\t\t? `selected-seat`\r\n\t\t\t\t\t\t\t\t\t: booked_seats[num].indexOf(item) > -1\r\n\t\t\t\t\t\t\t\t\t? `filled-seat`\r\n\t\t\t\t\t\t\t\t\t: `empty-seat`\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className={`seat-number`}>{num * 7 + item}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  ))\r\n\t\t\t\t: [1, 2, 3].map((item, index) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`seat ${\r\n\t\t\t\t\t\t\t\tnewly_booked_seats[num].indexOf(item) > -1\r\n\t\t\t\t\t\t\t\t\t? `selected-seat`\r\n\t\t\t\t\t\t\t\t\t: booked_seats[num].indexOf(item) > -1\r\n\t\t\t\t\t\t\t\t\t? `filled-seat`\r\n\t\t\t\t\t\t\t\t\t: `empty-seat`\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"seat-number\">{num * 7 + item}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  ))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CoachRow;\r\n","import React, { useContext } from 'react';\r\nimport CoachContext from '../../context/ticketBooking/context';\r\nimport CoachRow from './coachRow';\r\n\r\ninterface Props {}\r\n\r\nconst CoachSection = (props: Props) => {\r\n\tconst { booked_seats } = useContext(CoachContext);\r\n\treturn (\r\n\t\t<div className=\"coach-section\">\r\n\t\t\t<h5>Train Coach</h5>\r\n\t\t\t<div className=\"signs\">\r\n\t\t\t\t<div className=\"sign\">\r\n\t\t\t\t\t<div className=\"empty-circle\"></div>\r\n\t\t\t\t\t<span className=\"sign-text\">Empty Seats</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sign\">\r\n\t\t\t\t\t<span className=\"booked-circle\"></span>\r\n\t\t\t\t\t<span className=\"sign-text\">Booked Seats</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sign\">\r\n\t\t\t\t\t<span className=\"selected-circle\"></span>\r\n\t\t\t\t\t<span className=\"sign-text\">Selected Seats</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"train-coach\">\r\n\t\t\t\t<div className=\"seats-section\">\r\n\t\t\t\t\t{booked_seats.map((row: any, index: any) => {\r\n\t\t\t\t\t\treturn <CoachRow num={index} row={row} key={index} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CoachSection;\r\n","import React from 'react';\r\nimport BookTickets from './book-tickets';\r\nimport CoachSection from './coachSection';\r\n\r\ninterface Props {}\r\n\r\nconst MainContent = (props: Props) => {\r\n\treturn (\r\n\t\t<div className=\"main-content\">\r\n\t\t\t<div className=\"book-ticket\">\r\n\t\t\t\t<BookTickets />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"coach-section\">\r\n\t\t\t\t<CoachSection />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MainContent;\r\n","import { useContext } from 'react';\r\nimport CoachContext from '../context/ticketBooking/context';\r\n\r\ninterface Props {\r\n\tbrand: string;\r\n}\r\n\r\nconst Navbar = ({ brand }: Props) => {\r\n\tconst { handleRefreshTickets } = useContext(CoachContext);\r\n\r\n\tconst handleClick = (event: { preventDefault: () => void }) => {\r\n\t\tevent.preventDefault();\r\n\t\thandleRefreshTickets();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"navbar\">\r\n\t\t\t<h2 className=\"navbar-brand\">{brand}</h2>\r\n\t\t\t<button className=\"refresh-button\" onClick={handleClick}>\r\n\t\t\t\tRefresh Coach\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport MainContent from '../components/main-content/MainContent';\r\nimport Navbar from '../components/navbar';\r\nimport CoachContext from '../context/ticketBooking/context';\r\n\r\ninterface Props {}\r\n\r\nconst Homepage = (props: Props) => {\r\n\tconst { handleGetTickets } = useContext(CoachContext);\r\n\r\n\tuseEffect(() => {\r\n\t\thandleGetTickets();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"homepage\">\r\n\t\t\t<Navbar brand=\"Ticket Booking\" />\r\n\t\t\t<MainContent />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\nimport CoachState from './context/ticketBooking/state';\nimport Homepage from './pages/homepage';\nimport './styles/App.css';\n\nfunction App() {\n\treturn (\n\t\t<CoachState>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Homepage />\n\t\t\t</div>\n\t\t</CoachState>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}